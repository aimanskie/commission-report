const transactionCard = document.getElementById('transaction-card')
const salesPersonCardContainer = document.getElementById('salesperson-card-container')
const formBtn = document.getElementById('transaction-form')
const pdfBtn = document.getElementById('generate-pdf')
const salesPersonContainer = document.getElementById('salesperson-selection')
const submitBtn = document.querySelector('form>button')
const salePriceInput = document.getElementById('sale-price')
const addressInput = document.getElementById('address')
const salesPersonCount = document.getElementById('number-of-salesperson')
let salesPersonArray = []

salePriceInput.addEventListener('input', (e) => {
  const value = e.target.value.replace(/,/g, '')
  if (!isNaN(value) && value.length > 0) {
    e.target.value = Number(value).toLocaleString()
  } else {
    e.target.value = ''
  }
})

salesPersonCount.addEventListener('input', function (event) {
  const salesPersonNo = event.target.value
  salesPersonContainer.innerHTML = ''

  for (let i = 0; i < salesPersonNo; i++) {
    salesPersonContainer.innerHTML += `
    <div class="mb-4">
      <label for="salesperson-${i + 1}" class="block text-gray-700 font-bold mb-2">${i + 1}. Salesperson's Name:</label>
      <input type="text" id="salesperson-${i + 1}" name="salesperson-${
      i + 1
    }" class="w-full p-2 border border-gray-300 rounded capitalize" required>
    </div>
    <div class="mb-4">
      <label for="commission-${i + 1}" class="block text-gray-700 font-bold mb-2">Percentage:</label>
      <div class="relative w-full p-2 border border-gray-300 rounded flex-row flex items-center">
        <input type="text" id="commission-${i + 1}" name="commission-${i + 1}" class="w-full px-2" required>
        <span>%</span>
      </div>
    </div>
    `
  }
  if (salesPersonNo > 0) {
    submitBtn.classList.remove('hidden')
  } else {
    submitBtn.classList.add('hidden')
  }
})

formBtn.addEventListener('submit', function (event) {
  event.preventDefault()
  salesPersonArray = []

  const salesPersonNo = salesPersonCount.value
  for (let i = 0; i < salesPersonNo; i++) {
    const salespersonName = document.getElementById(`salesperson-${i + 1}`).value
    const commission = document.getElementById(`commission-${i + 1}`).value

    salesPersonArray.push({
      name: salespersonName,
      percentage: commission
    })
  }

  salesPersonArray.map((salesperson) => {
    salesPersonCardContainer.innerHTML += `
    <div class="flex flex-col space-y-1">
      <p class="capitalize"><strong>Salesperson: ${salesperson.name}</strong></p>
      <p><strong>Sale Amount: RM${salePriceInput.value}</strong></p>
      <p><strong>Commission Rate: ${salesperson.percentage}</strong>%</p>
      <p><strong>Commission Amount: RM${(
        (salesperson.percentage / 100) *
        Number(salePriceInput.value.replace(/,/g, ''))
      ).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</strong></p>   
    </div>
    `
  })
  transactionCard.classList.remove('hidden')
})

pdfBtn.addEventListener('click', function () {
  const { jsPDF } = window.jspdf
  const doc = new jsPDF()

  const logoUrl = 'logo.jpg'
  var img = new Image()

  
  getImgFromUrl(logoUrl, (img) => {
    generatePdf(img)
  })
  
  function getImgFromUrl(logoUrl, callback) {
    img.src = logoUrl
    img.onload = function () {
      callback(img)
    }
  }
  
  function generatePdf(img) {
    doc.addImage(img, 'jpg', 150, 50, 20, 20)

    doc.setFontSize(12)
    doc.text('Generated By:', 10, 10)
    doc.text('Generated On:', 140, 10)
    doc.text(new Date().toLocaleDateString(), 170, 10)

    doc.setFontSize(12)
    doc.text('Property Address:', 10, 50)
    doc.setFont('helvetica', 'bold')
    doc.text(addressInput.value.toUpperCase(), 10, 55)
    doc.setFont('helvetica', 'normal')

    let yOffset = 70
    salesPersonArray.forEach((salesperson, i) => {
      doc.text(`${i + 1}.Salesperson: ${salesperson.name.toUpperCase()}`, 10, yOffset)
      yOffset += 5
      doc.setFont('helvetica', 'bold')
      doc.text('Total Commission Received:', 10, yOffset)
      const totalCommission = salesPersonArray.reduce((total, salesperson) => {
        return total + (salesperson.percentage / 100) * Number(salePriceInput.value.replace(/,/g, ''))
      }, 0)
      doc.text(
        `RM${totalCommission.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`,
        70,
        yOffset
      )
    })

    yOffset += 20

    doc.save('transaction-report.pdf')
  }
})
